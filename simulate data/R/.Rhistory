name_DF <- "DF_N=866_2023-01-15.csv"
DF <- read.csv(file.path("..", "..", "datasets", name_DF))
DF <- DF[!duplicated(DF),] # remove duplicates
DF <- DF[DF$name!="",]
DF <- DF[DF$family_name!="",]
DF <- DF[DF$gender!="",]
DF <- DF[DF$country!="",]
DF <- DF[DF$birth_year!="",]
# install.packages("reticulate")
# for pandas read pickle
library(reticulate)
Sys.which('python')
py_install("pandas") # say no to miniconda
use_virtualenv("r-reticulate")
source_python("pickle_reader.py")
country_proba_names <- read_pickle_file(file.path("..", "dictionaries", "country_proba_names_75names.pkl"))
# generate treatment:
DF$treatment <- rbinom(nrow(DF),1,0.4)
# generate covariates
DF$X1 <- 2020 - DF$birth_year # include age
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X2 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X3 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(5,1)+5
scale <- runif(1,0,0.5)
DF$X4 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X5 <- rnorm(nrow(DF),loc,scale)
residual_errors <- rnorm(nrow(DF),0,1)
a <- sample.int(20,1)/10
b <- sample.int(30,1)/10
c <- sample.int(40,1)/10
d <- sample.int(10,1)/10
DF$Y <- - 10 + a*DF$treatment*DF$X1 + b*log(DF$X4) + c*DF$X3*DF$X2 + d*DF$X5
head(DF)
write.csv(DF, file.path("..", "..", "datasets", sprintf("DF_associations_Rversion_N=%s_%s.csv", nrow(DF), Sys.Date())), row.names=FALSE)
# install.packages("reticulate")
# used for: pandas read pickle file
library(reticulate)
name_DF <- 'DF_N=8815_2023-01-16.csv'
DF <- read.csv(file.path("..", "..", "datasets", name_DF))
DF <- DF[!duplicated(DF),] # remove duplicates
# remove NaN values or empty elements:
DF <- DF[DF$name!="",]
DF <- DF[DF$family_name!="",]
DF <- DF[DF$was_born_female!="",]
DF <- DF[DF$country!="",]
DF <- DF[DF$birth_year!="",]
DF <- na.omit(DF)
DF
Sys.which('python')
py_install("pandas") # say no to miniconda
use_virtualenv("r-reticulate")
source_python("pickle_reader.py")
name_dict <- 'country_proba_names_5580names.pkl'
country_proba_names <- read_pickle_file(file.path("..", "dictionaries", name_dict))
# generate treatment:
DF$treatment <- rbinom(nrow(DF),1,0.4)
# generate covariates
DF$X1 <- 2020 - DF$birth_year # include age
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X2 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X3 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(5,1)+5
scale <- runif(1,0,0.5)
DF$X4 <- rnorm(nrow(DF),loc,scale)
loc <- sample.int(10,1)
scale <- runif(1,0,2)
DF$X5 <- rnorm(nrow(DF),loc,scale)
residual_errors <- rnorm(nrow(DF),0,1)
a <- sample.int(20,1)/10
b <- sample.int(30,1)/10
c <- sample.int(40,1)/10
d <- sample.int(10,1)/10
DF$Y <- - 10 + a*DF$treatment*DF$X1 + b*log(DF$X4) + c*DF$X3*DF$X2 + d*DF$X5
head(DF)
write.csv(DF, file.path("..", "..", "datasets", sprintf("DF_associations_Rversion_N=%s_%s.csv", nrow(DF), Sys.Date())), row.names=FALSE)
